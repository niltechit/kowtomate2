@using CutOutWiz.Data
@using CutOutWiz.Data.Security
@using static CutOutWiz.Core.Utilities.Enums

<div class="mb-2 row">
    <label for="Permissions" class="col-sm-4 col-form-label fw-bold">Modules</label>
    <div class="col-sm-8">
       <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            @bind-Value=@permission.SelectedModules Multiple="true" Placeholder="Select..." Data=@modules TextProperty="Name" ValueProperty="ObjectId" Class="w-100" />
    </div>
</div>

<div class="mb-2 row">
    <label for="Permissions" class="col-sm-4 col-form-label fw-bold">Company Types</label>
    <div class="col-sm-8">
       <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            @bind-Value=@permission.SelectedCompanyTypes Multiple="true" Placeholder="Select..." Data=@companyTypes TextProperty="Name" ValueProperty="Value" Class="w-100" />
    </div>
</div>

<div class="mb-2 row">
    <label for="Name" class="col-sm-4 col-form-label fw-bold">Name</label>
    <div class="col-sm-8">
        <InputText class="form-control" @bind-Value="permission.Name"></InputText>
        <ValidationMessage For="@(() => permission.Name)" />
    </div>
</div>

<div class="mb-2 row">
    <label for="Value" class="col-sm-4 col-form-label fw-bold">Value</label>
    <div class="col-sm-8">
        <InputText class="form-control" @bind-Value="permission.Value"></InputText>
        <ValidationMessage For="@(() => permission.Value)" />
    </div>
</div>

<div class="mb-2 row">
    <label for="Status" class="col-sm-4 col-form-label fw-bold">Status</label>
    <div class="col-sm-8">
      <InputSelect @bind-Value="permission.Status" class="form-select">
        <option value="0">- Select -</option>
        @foreach (var status in Enum.GetValues(typeof(GeneralStatus)))
        {
            <option value="@((int)status)">@status</option>
        }
         </InputSelect>
        <ValidationMessage For="@(() => permission.Status)" />
    </div>
</div>

@code {
    [Parameter]
    public Permission permission { get; set; }

    [Parameter]
    public List<Module> modules { get; set; }

    [Parameter]
    public List<KeyValuePairCustomModel> companyTypes { get; set; }
    //[Parameter]
    //public IEnumerable<int> selectedModules { get; set; }

    //void OnChange(object value, string name)
    //{
    //    //var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;
    //    //console.Log($"{name} value changed to {str}");
    //}
}
