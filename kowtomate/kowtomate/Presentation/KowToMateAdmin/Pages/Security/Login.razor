@using CutOutWiz.Data.Security
@using CutOutWiz.Services.Security
@using KowToMateAdmin.Pages.Shared

@inject ICustomAuthenticationService _authenticationService
@inject NavigationManager NavigationManager

<div class="account-pages my-5 pt-sm-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6 col-xl-5">
                <div class="card overflow-hidden">
                    <div class="bg-primary bg-soft">
                        <div class="row">
                            <div class="col-7">
                                <div class="text-primary p-4">
                                    <h5 class="text-primary">Welcome Back !</h5>
                                    <p>Sign in to continue to KowToMate.</p>
                                </div>
                            </div>
                            <div class="col-5 align-self-end">
                                <img src="assets/images/profile-img.png" alt="" class="img-fluid">
                            </div>
                        </div>
                    </div>
                    <div class="card-body pt-0"> 
                        <div class="auth-logo">
                            <a href="/" class="auth-logo-light">
                                <div class="avatar-md profile-user-wid mb-4">
                                    <span class="avatar-title rounded-circle bg-light">
                                        <img src="assets/images/logo-light.svg" alt="" class="rounded-circle" height="34">
                                    </span>
                                </div>
                            </a>

                            <a href="#" class="auth-logo-dark">
                                <div class="avatar-md profile-user-wid mb-4">
                                    <span class="avatar-title rounded-circle bg-light">
                                        <img src="assets/images/logo.svg" alt="" class="rounded-circle" height="34">
                                    </span>
                                </div>
                            </a>
                        </div>
                        <div class="p-2">

                            <EditForm Model=@loginInfo OnValidSubmit="@DoLogin" class="form-horizontal">     
                                
                                <DataAnnotationsValidator />

                                <div class="mb-3">
                                     <label for="username" class="form-label">Username</label>
                                    <InputText class="form-control" @bind-Value="loginInfo.Username" placeholder="Enter username"></InputText>
                                    <ValidationMessage For="@(() => loginInfo.Username)" />
                                </div>
                
                                <div class="mb-3">
                                    <label class="form-label">Password</label>
                                    <div class="input-group auth-pass-inputgroup">
                                        <InputText @bind-Value="loginInfo.Password" type="password" class="form-control" placeholder="Enter password" aria-label="Password" aria-describedby="password-addon"></InputText>
                                        <button class="btn btn-light " type="button" id="password-addon"><i class="mdi mdi-eye-outline"></i></button>
                                    </div>
                                </div>

                                <div class="form-check">
                                    <InputCheckbox @bind-Value="loginInfo.RememberMe" class="form-check-input" id="remember-check"></InputCheckbox>
                                    <label class="form-check-label" for="remember-check">
                                        Remember me
                                    </label>
                                </div>
                                        
                                <div class="mt-3 d-grid">
                                    <button class="btn btn-primary waves-effect waves-light" type="submit" disabled="@isSubmitting">Log In</button>
                                </div>
            
                               @* <div class="mt-4 text-center">
                                    <h5 class="font-size-14 mb-3">Sign in with</h5>
            
                                    <ul class="list-inline">
                                        <li class="list-inline-item">
                                            <a href="javascript::void()" class="social-list-item bg-primary text-white border-primary">
                                                <i class="mdi mdi-facebook"></i>
                                            </a>
                                        </li>
                                        <li class="list-inline-item">
                                            <a href="javascript::void()" class="social-list-item bg-info text-white border-info">
                                                <i class="mdi mdi-twitter"></i>
                                            </a>
                                        </li>
                                        <li class="list-inline-item">
                                            <a href="javascript::void()" class="social-list-item bg-danger text-white border-danger">
                                                <i class="mdi mdi-google"></i>
                                            </a>
                                        </li>
                                    </ul>
                                </div>*@

                                <div class="mt-4 text-center">
                                    <a href="#" class="text-muted"><i class="mdi mdi-lock me-1"></i> Forgot your password?</a>
                                </div>
                            </EditForm>
                        </div>
            
                    </div>
                </div>
                <div class="mt-5 text-center">
                            
                    <div>
                        <p>Don't have an account ? <a href="auth-register.html" class="fw-medium text-primary"> Signup now </a> </p>
                        <p>© @DateTime.Now.Year  KowToMate. Crafted with <i class="mdi mdi-heart text-danger"></i> by Themesbrand</p>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<!-- end account-pages -->

<ModalNotification @ref="modalNotification">
</ModalNotification>

@code {
    protected ModalNotification modalNotification { get; set; }
    //https://www.learmoreseekmore.com/2022/01/part1-blazorsrver-cookie-authentication.html
    private LoginViewModel loginInfo = new LoginViewModel();
    private bool isSubmitting = false;
    private bool isLoginPopupVisible = false;

    private async Task DoLogin()
    {
        var response = await _authenticationService.AuthenticateUser(loginInfo);

        if (!response.IsSuccess)
        {
            modalNotification.ShowMessage("Message", response.Message);
            isSubmitting = false;
            return;
        }
        // LocalRedirect("/");

        // return LocalRedirect(returnUrl);
        //returnUrl = returnUrl ?? Url.Content("~/");

        // *** !!! This is where you would validate the user !!! ***
        // In this example we just log the user in

        // (Always log the user in for this demo)
        //var claims = new List<Claim>
        //        {
        //            new Claim(ClaimTypes.Name, "First Name"),
        //            new Claim(ClaimTypes.Role, "Administrator"),
        //        };

        //var claimsIdentity = new ClaimsIdentity(
        //    claims, CookieAuthenticationDefaults.AuthenticationScheme);
        //    //https://github.com/dotnet/aspnetcore/issues/13601#issuecomment-679870698
        //var authProperties = new AuthenticationProperties
        //    {
        //        IsPersistent = true
        //    };

        //    try
        //    {
        //        //https://docs.microsoft.com/en-us/aspnet/core/blazor/security/?view=aspnetcore-6.0
        //        await httpContextAccessor.HttpContext.SignInAsync(
        //        CookieAuthenticationDefaults.AuthenticationScheme,
        //        new ClaimsPrincipal(claimsIdentity),
        //        authProperties);

        //        //return LocalRedirect(returnUrl);
        //    }
        //    catch 
        //    {

        //    }

        isSubmitting = false;
        Guid key = Guid.NewGuid();
        BlazorCookieLoginMiddleware.Logins[key] = loginInfo;
        NavigationManager.NavigateTo($"/authorizelogin?key={key}", true);
    }

}
