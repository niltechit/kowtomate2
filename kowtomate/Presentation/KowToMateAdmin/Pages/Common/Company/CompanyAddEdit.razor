@using CutOutWiz.Services.Models.Common
@using CutOutWiz.Core.Management
@using static CutOutWiz.Core.Utilities.Enums

<div class="mb-2 row">
	<label for="Name" class="col-sm-4 col-form-label fw-bold required-field">Company Name</label>
	<div class="col-sm-8">
		<InputText class="form-control" placeholder="Company Name" @bind-Value="company.Name"></InputText>
		<ValidationMessage For="@(() => company.Name)" />
	</div>
</div>
@if (company.Id == 0)
{
	<div class="mb-2 row">
		<label for="Code" class="col-sm-4 col-form-label fw-bold required-field">Code</label>
		<div class="col-sm-8">
			<InputText class="form-control" Style="text-transform: uppercase;" placeholder="Short Code" @bind-Value="company.Code"></InputText>
			<ValidationMessage For="@(() => company.Code)" />
		</div>
	</div>
}
@*<div class="mb-2 row">
    <label for="ParentId" class="col-sm-4 col-form-label fw-bold">Type</label>
    <div class="col-sm-8">
        <InputSelect @bind-Value="company.CompanyType" class="form-select">
           <option value="0">- Select -</option>
        @foreach (var type in Enum.GetValues(typeof(CompanyType)))
        {
            <option value="@((int)type)">@type</option>
        }
         </InputSelect>
        <ValidationMessage For="@(() => company.CompanyType)" />
    </div>
</div>*@

<div class="mb-2 row">
	<label for="Code" class="col-sm-4 col-form-label fw-bold required-field">First Name</label>
	<div class="col-sm-8">
		<InputText class="form-control" placeholder="First Name" @bind-Value="company.FirstName"></InputText>
		<ValidationMessage For="@(() => company.FirstName)" />
	</div>
</div>
<div class="mb-2 row">
	<label for="Code" class="col-sm-4 col-form-label fw-bold">Last Name</label>
	<div class="col-sm-8">
		<InputText class="form-control" placeholder="Last Name" @bind-Value="company.LastName"></InputText>
		<ValidationMessage For="@(() => company.LastName)" />
	</div>
</div>

<div class="mb-2 row">
	<label for="Telephone" class="col-sm-4 col-form-label fw-bold required-field">Telephone</label>
	<div class="col-sm-8">
		<InputText class="form-control" onkeypress="return ((event.charCode !=8 && event.charCode <=57) || (event.charCode >= 106 && event.charCode <= 222))" placeholder="Phone Number" @bind-Value="company.Telephone"></InputText>
		<ValidationMessage For="@(() => company.Telephone)" />
	</div>
</div>

<div class="mb-2 row">
	<label for="Email" class="col-sm-4 col-form-label fw-bold required-field">Email</label>
	<div class="col-sm-8">
		<InputText class="form-control"  @bind-Value="company.Email" placeholder="someone@domain.com" autocomplete="off"></InputText>
		<ValidationMessage For="@(() => company.Email)" />
	</div>
</div>

@if (company.Id <= 0)
{
	<div class="mb-2 row">
		<label for="text" class="col-sm-4 col-form-label fw-bold required-field">User Name</label>
		<div class="col-sm-8">
			<InputText class="form-control" @bind-Value="company.UserName" placeholder="User Name" autocomplete="off"></InputText>
			<ValidationMessage For="@(() => company.UserName)" />
		</div>
	</div>
	<div class="mb-2 row">
		<label for="userpassword" class="col-sm-4 col-form-label fw-bold required-field">Password</label>
		<div class="col-sm-8">
			<div class="input-group auth-pass-inputgroup">
				<InputText type="@passwordType" class="form-control" placeholder="password" aria-label="Password" aria-describedby="password-addon" @bind-Value="company.Password"></InputText>
				<button class="btn btn-light " type="button" id="password-addon"><i @onclick="ShowPassword" class="@passwordIcon"></i></button>
				<ValidationMessage For="@(() => company.Password)" />
			</div>
		</div>
	</div>

	<div class="mb-2 row">
		<label for="userpassword" class="col-sm-4 col-form-label fw-bold required-field">Confirm Password</label>
		<div class="col-sm-8">
			<div class="input-group auth-pass-inputgroup">
				<InputText type="@passwordConfirmType" class="form-control" placeholder="Confirm password" aria-label="Password" aria-describedby="password-addon" @bind-Value="company.ConfirmPassword"></InputText>
				<button class="btn btn-light " type="button" id="password-addon"><i @onclick="ShowConfirmPassword" class="@passwordConfirmIcon"></i></button>
				<ValidationMessage For="@(() => company.ConfirmPassword)" />
			</div>
		</div>
	</div>

}

<div class="mb-2 row">
	<label for="Team" class="col-sm-4 col-form-label fw-bold">Team</label>
	<div class="col-sm-8">
		<InputSelect @bind-Value="company.TeamId" class="form-select">
			<option value="0">- Select -</option>
			@foreach (var type in Teams)
			{
				<option value="@(type.Id)">@type.Name</option>
			}
		</InputSelect>
		<ValidationMessage For="@(() => company.TeamId)" />
	</div>
</div>
<div class="mb-2 row">
	<label for="Country" class="col-sm-4 col-form-label fw-bold">Country</label>
	<div class="col-sm-8">
		<RadzenDropDown AllowClear="true" TValue="string" @bind-Value="company.Country" AllowVirtualization="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowFiltering="true" Class="w-100"
						Placeholder="- Select -" Data=@countries TextProperty="Name" ValueProperty="Name" />
		<ValidationMessage For="@(() => company.Country)" />
	</div>
</div>

<div class="mb-2 row">
	<label for="Address1" class="col-sm-4 col-form-label fw-bold">Address</label>
	<div class="col-sm-8">
		<InputText class="form-control" placeholder="Address" @bind-Value="company.Address1"></InputText>
		<ValidationMessage For="@(() => company.Address1)" />
	</div>
</div>

@*<div class="mb-2 row">
    <label for="Address2" class="col-sm-4 col-form-label fw-bold">Address2</label>
    <div class="col-sm-8">
        <InputText class="form-control" @bind-Value="company.Address2"></InputText>
        <ValidationMessage For="@(() => company.Address2)" />
    </div>
</div>*@

<div class="mb-2 row">
	<label for="City" class="col-sm-4 col-form-label fw-bold">City</label>
	<div class="col-sm-8">
		<InputText class="form-control" placeholder="City" @bind-Value="company.City"></InputText>
		<ValidationMessage For="@(() => company.City)" />
	</div>
</div>
<div class="mb-2 row">
	<label for="City" class="col-sm-4 col-form-label fw-bold">State</label>
	<div class="col-sm-8">
		<InputText class="form-control" placeholder="State" @bind-Value="company.State"></InputText>
		<ValidationMessage For="@(() => company.State)" />
	</div>
</div>

<div class="mb-2 row">
	<label for="Zipcode" class="col-sm-4 col-form-label fw-bold">Zipcode</label>
	<div class="col-sm-8">
		<InputText class="form-control" placeholder="Zip Code" @bind-Value="company.Zipcode"></InputText>
		<ValidationMessage For="@(() => company.Zipcode)" />
	</div>
</div>

<div class="mb-2 row">
	<label for="Address1" class="col-sm-4 col-form-label fw-bold">Delivery Deadline In Minute</label>
	<div class="col-sm-8">
		<InputNumber class="form-control" placeholder="Delivery Deadline In Minute" @bind-Value="company.DeliveryDeadlineInMinute"></InputNumber>
		<ValidationMessage For="@(() => company.DeliveryDeadlineInMinute)" />
	</div>
</div>


<div class="mb-2 row">
	<label for="ParentId" class="col-sm-4 col-form-label fw-bold">File Server</label>
	<div class="col-sm-8">
		<InputSelect @bind-Value="company.FileServerId" class="form-select">
			<option value="0">- Select -</option>
			@foreach (var type in FileServers)
			{
				<option value="@(type.Id)">@type.Name</option>
			}
		</InputSelect>
		<ValidationMessage For="@(() => company.FileServerId)" />
	</div>
</div>



@code {
	[Parameter]
	public CompanyModel company { get; set; }

	[Parameter]
	public List<CountryModel> countries { get; set; }

	[Parameter]
	public List<FileServerModel> FileServers { get; set; }
	[Parameter]
	public List<TeamModel> Teams { get; set; }

	string passwordType = "password";
	string passwordConfirmType = "password";
	string passwordIcon = "fas fa-eye-slash";
	string passwordConfirmIcon = "fas fa-eye-slash";

	private async Task ShowPassword()
	{
		if (passwordIcon == "fas fa-eye-slash")
		{
			passwordType = "";
			passwordIcon = "fas fa-eye";
		}
		else if (passwordIcon == "fas fa-eye")
		{
			passwordType = "password";
			passwordIcon = "fas fa-eye-slash";
		}
	}
	private async Task ShowConfirmPassword()
	{
		if (passwordConfirmIcon == "fas fa-eye-slash")
		{
			passwordConfirmType = "";
			passwordConfirmIcon = "fas fa-eye";
		}
		else if (passwordConfirmIcon == "fas fa-eye")
		{
			passwordConfirmType = "password";
			passwordConfirmIcon = "fas fa-eye-slash";
		}
	}
}
