@using CutOutWiz.Core.Utilities
@using CutOutWiz.Core
@using CutOutWiz.Services.ClaimManagementService
@using Microsoft.AspNetCore.Components
@using System.Security.Claims
@inject IClaimsService _claimsService;


@if ((bool)IsShowOldPassword)
{

    <div class="mb-3">
        <label for="PreviousPassword" class="col-sm-4 col-form-label fw-bold required-field">Old Password</label>
        <div class="input-group auth-pass-inputgroup">
            <InputText type="@(showOldPassword ? "text" : "password")" class="form-control" placeholder=" Old Password" aria-label="Password" aria-describedby="password-addon" @bind-Value="userInfo.PreviousPassword"></InputText>
            <button class="btn btn-light " @onclick="ToggleOldPasswordVisibility" type="button" id="password-addon"><i class="@oldPasswordIcon"></i></button>

        </div>
        <ValidationMessage For="@(() => userInfo.PreviousPassword)" />
    </div>

}

<div class="mb-3">
    <label for="Password" class="col-sm-4 col-form-label fw-bold required-field">New Password</label>
    <div class="input-group auth-pass-inputgroup">
        <InputText type="@(showNewPassword ? "text" : "password")" class="form-control" placeholder="New Password" aria-label="Password" aria-describedby="password-addon" @bind-Value="userInfo.Password"></InputText>
        <button class="btn btn-light " @onclick="ToggleNewPasswordVisibility" type="button" id="password-addon"><i class="@newPasswordIcon"></i></button>

    </div>
    <ValidationMessage For="@(() => userInfo.Password)" />
</div>

<div class="mb-3">
    <label for="ConfirmPassword" class="col-sm-4 col-form-label fw-bold required-field">Confirm Password</label>
    <div class="input-group auth-pass-inputgroup">
        <InputText type="@(showConfirmPassword ? "text" : "password")" class="form-control" placeholder="Confirm Password" aria-label="Password" aria-describedby="password-addon" @bind-Value="userInfo.ConfirmPassword"></InputText>
        <button class="btn btn-light " @onclick="ToggleConfirmPasswordVisibility" type="button" id="password-addon"><i class="@confirmPasswordIcon"></i></button>

    </div>
    <ValidationMessage For="@(() => userInfo.ConfirmPassword)" />
</div>



@code {
    [Parameter]
    public UserViewModel userInfo { get; set; }
    [Parameter]
    public bool? IsShowOldPassword { get; set; } = false;

    private bool showOldPassword = false;
    private bool showNewPassword = false;
    private bool showConfirmPassword = false;

    private string oldPasswordIcon = "fas fa-eye-slash";
    private string newPasswordIcon = "fas fa-eye-slash";
    private string confirmPasswordIcon = "fas fa-eye-slash";

    List<Claim> claims = new List<Claim>();

    protected override async Task OnInitializedAsync()
    {
        claims = await _claimsService.GetClaimsAsync();
    }

    private void ToggleOldPasswordVisibility()
    {
        showOldPassword = !showOldPassword;
        oldPasswordIcon = showOldPassword ? "fas fa-eye" : "fas fa-eye-slash";
    }

    private void ToggleNewPasswordVisibility()
    {
        showNewPassword = !showNewPassword;
        newPasswordIcon = showNewPassword ? "fas fa-eye" : "fas fa-eye-slash";
    }

    private void ToggleConfirmPasswordVisibility()
    {
        showConfirmPassword = !showConfirmPassword;
        confirmPasswordIcon = showConfirmPassword ? "fas fa-eye" : "fas fa-eye-slash";
    }
}
