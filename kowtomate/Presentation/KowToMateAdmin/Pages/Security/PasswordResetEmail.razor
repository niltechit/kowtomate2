@page "/password/reset/mail"
@using CutOutWiz.Services.Managers.Common
@using CutOutWiz.Services.Models.Security
@using CutOutWiz.Services.EmailMessage
@using CutOutWiz.Services.Security
@using KowToMateAdmin.Helper

@layout EmptyLayout

@attribute [AllowAnonymous]

@inject IJSRuntime js
@inject IUserService _userService
@inject ICompanyManager _companyService
@inject IWorkflowEmailService _workflowEmailService
@inject IConfiguration _configuration
@inject IContactManager _contactManager

<div class="account-pages my-5 pt-sm-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6 col-xl-5">
                <div class="card overflow-hidden">
                    <div class="bg-primary bg-soft">
                        <div class="row">
                            <div class="col-7">
                                <div class="text-primary p-4">
                                    <h5 class="text-primary">Welcome Back !</h5>
                                    <p>Sign in to continue to KowToMate.</p>
                                </div>
                            </div>
                            <div class="col-5 align-self-end">
                                <img src="assets/images/profile-img.png" alt="" class="img-fluid">
                            </div>
                        </div>
                    </div>
                    <div class="card-body pt-0">
                        <div class="auth-logo">
                            <a href="/" class="auth-logo-light">
                                <div class="avatar-md profile-user-wid mb-4">
                                    <span class="avatar-title rounded-circle bg-light">
                                        <img src="assets/images/logo-light.svg" alt="" class="rounded-circle" height="34">
                                    </span>
                                </div>
                            </a>

                            <a href="#" class="auth-logo-dark">
                                <div class="avatar-md profile-user-wid mb-4">
                                    <span class="avatar-title rounded-circle bg-light">
                                        <img src="assets/images/logo.svg" alt="" class="rounded-circle" height="34">
                                    </span>
                                </div>
                            </a>
                        </div>
                        <div class="p-2">

                            <EditForm Model=@userInfo OnValidSubmit="@EmailSend" class="form-horizontal">

                                <DataAnnotationsValidator />
                                <div class="mb-3">
                                    <label for="userpassword" class="form-label">Email</label>
                                    <input type="text" class="form-control" @bind-value="@userInfo.Username" id="userpassword" placeholder="Input Your Registered Email" required>
                                </div>
                                <div class="mt-4 d-grid">
                                    <button class="btn btn-primary waves-effect waves-light" type="submit">Send Mail</button>
                                </div>
                            </EditForm>
                        </div>

                    </div>
                </div>
                <div class="mt-5 text-center">

                    <div>
                        <p>Don't have an account ? <a href="/company/signup" class="fw-medium text-primary"> Signup now </a> or <a href="/login" class="fw-medium text-primary"> Login </a> </p>
                        <p>© @DateTime.Now.Year <i class="mdi mdi-heart text-danger"></i> by KowToMate</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    private UserModel userInfo = new UserModel();
    private bool isSubmitting = false;
    public UserModel user = new UserModel();
    public ContactModel contact = new ContactModel();

    private async Task EmailSend()
    {
        user = await _userService.GetUserByUsername(userInfo.Username);
        if (user != null)
        {
            await SendMailResetPassword("Add");
            await js.DisplayMessage($"Please Check Your Email!!");
        }
        else
        {
            await js.DisplayMessage($"This Email is Not Available, Please Try Another Email/Username!");
        }
    }
    private async Task SendMailResetPassword(string callerType)
    {
        var result = await _companyService.GetById(user.CompanyId);
        var detailUrl = $"{_configuration["AppMainUrl"]}/password/reset/{result.ObjectId}/{user.ObjectId}";
        var companyName = result.Name;
        var userVM = new EmailUserViewModel
            {
                User = user,
                DetailUrl = detailUrl,
                ContactId = user.ContactId,
                CompanyName = companyName,
            };

        userVM.MailType = callerType;
        await _workflowEmailService.PasswordReset(userVM);
    }
}
