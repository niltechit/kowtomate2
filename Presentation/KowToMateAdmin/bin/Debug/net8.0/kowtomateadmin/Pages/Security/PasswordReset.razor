@page "/password/reset/{companyObjectId}/{objectId}"
@using CutOutWiz.Core
@using CutOutWiz.Services.Models.Security
@using CutOutWiz.Services.Security
@using KowToMateAdmin.Helper


@layout EmptyLayout

@attribute [AllowAnonymous]

@inject IJSRuntime js
@inject IUserService _userService
@inject NavigationManager NavigationManager
<div class="account-pages my-5 pt-sm-5">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-8 col-lg-6 col-xl-5">
                <div class="card overflow-hidden">
                    <div class="bg-primary bg-soft">
                        <div class="row">
                            <div class="col-7">
                                <div class="text-primary p-4">
                                    <h5 class="text-primary">Welcome Back !</h5>
                                    <p>Sign in to continue to KowToMate.</p>
                                </div>
                            </div>
                            <div class="col-5 align-self-end">
                                <img src="assets/images/profile-img.png" alt="" class="img-fluid">
                            </div>
                        </div>
                    </div>
                    <div class="card-body pt-0">
                        <div class="auth-logo">
                            <a href="/" class="auth-logo-light">
                                <div class="avatar-md profile-user-wid mb-4">
                                    <span class="avatar-title rounded-circle bg-light">
                                        <img src="assets/images/logo-light.svg" alt="" class="rounded-circle" height="34">
                                    </span>
                                </div>
                            </a>

                            <a href="#" class="auth-logo-dark">
                                <div class="avatar-md profile-user-wid mb-4">
                                    <span class="avatar-title rounded-circle bg-light">
                                        <img src="assets/images/logo.svg" alt="" class="rounded-circle" height="34">
                                    </span>
                                </div>
                            </a>
                        </div>
                        <div class="p-2">

                            <EditForm Model=@userInfo OnValidSubmit="@ChangePassword" class="form-horizontal">

                                <DataAnnotationsValidator />
                                @*<div class="mb-3">
                                    <label for="userpassword" class="form-label">Password</label>
                                    <input type="password" class="form-control" @bind-value="@userInfo.PasswordHash" id="userpassword" placeholder="Enter password" required>
                                </div>

                                <div class="mb-3">
                                    <label for="userpassword" class="form-label">Confirm Password</label>
                                    <input type="password" class="form-control" id="userpassword" placeholder="Confirm password" required>
                                </div>
                                <div class="mt-4 d-grid">
                                    <button class="btn btn-primary waves-effect waves-light" type="submit">Register</button>
                                </div>*@

@*                                 <AuthorizeView Roles="Security.CanViewPreviousPasswordField">
                                    <div class="mb-3">
                                        <label for="Password" class="form-label">Previous Password</label>
                                        <InputText type="password" class="form-control" @bind-Value="userInfo.PreviousPassword" placeholder="Previous Password"></InputText>
                                        <ValidationMessage For="@(() => userInfo.PreviousPassword)" />
                                    </div>
                                </AuthorizeView>

 *@
                                <div class="mb-3">
									<label for="Password" class="form-label">Password</label>
                                    <InputText type="password" class="form-control" @bind-Value="userInfo.Password" placeholder="Password"></InputText>
                                    <ValidationMessage For="@(() => userInfo.Password)" />
								</div>
								<div class="mb-3">
									<label for="ConfirmPassword" class="form-label">Confirm Password</label>
                                    <InputText type="password" @bind-Value="userInfo.ConfirmPassword" class="form-control" placeholder="Confirm password"></InputText>
                                    <ValidationMessage For="@(() => userInfo.ConfirmPassword)" />
								</div>
                                <div class="mt-4 d-grid">
                                    <button class="btn btn-primary waves-effect waves-light" type="submit">Reset Password</button>
                                </div>
                                @* <PasswordResetForm userInfo="userInfo"/> *@

                            </EditForm>
                        </div>

                    </div>
                </div>
                <div class="mt-5 text-center">

                    <div>
                        <p>Don't have an account ? <a href="/company/signup" class="fw-medium text-primary"> Signup now </a> </p>
                        <p>© @DateTime.Now.Year <i class="mdi mdi-heart text-danger"></i> by KowToMate</p>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string objectId { get; set; }
    [Parameter]
    public string companyObjectId { get; set; }
    private UserViewModel userInfo = new UserViewModel();
    private bool isSubmitting = false;

    private async Task ChangePassword()
    {

        var salt = _userService.CreateRandomSalt();
        var hashedPassword = _userService.GetHashPassword(userInfo.Password, salt);
        userInfo.PasswordHash = hashedPassword;
        userInfo.PasswordSalt = salt;
        userInfo.ObjectId = objectId;
        var restult = await _userService.ResetPassword(userInfo);
        await js.DisplayMessage($"Your Password Reset Successfully !!");
        NavigationManager.NavigateTo("/login");
    }
}
